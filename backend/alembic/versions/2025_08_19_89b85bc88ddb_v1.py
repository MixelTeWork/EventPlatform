"""v1

Revision ID: 89b85bc88ddb
Revises: 
Create Date: 2025-08-19 00:23:47.156973

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '89b85bc88ddb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Dialog',
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Dialog')),
    sa.UniqueConstraint('id', name=op.f('uq_Dialog_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('GameLog',
    sa.Column('startStr', sa.String(length=8), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('countdown', sa.Integer(), nullable=False),
    sa.Column('opponent1Id', sa.Integer(), nullable=True),
    sa.Column('opponent2Id', sa.Integer(), nullable=True),
    sa.Column('startTime', sa.DateTime(), nullable=True),
    sa.Column('clicks1', sa.Integer(), nullable=False),
    sa.Column('clicks2', sa.Integer(), nullable=False),
    sa.Column('winner', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_GameLog')),
    sa.UniqueConstraint('id', name=op.f('uq_GameLog_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('Log',
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('actionCode', sa.String(length=16), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('userName', sa.String(length=64), nullable=False),
    sa.Column('tableName', sa.String(length=16), nullable=False),
    sa.Column('recordId', sa.Integer(), nullable=False),
    sa.Column('changes', sa.JSON(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Log')),
    sa.UniqueConstraint('id', name=op.f('uq_Log_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('Operation',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Operation')),
    sa.UniqueConstraint('id', name=op.f('uq_Operation_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('Other',
    sa.Column('ticketLoginEnabled', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Other')),
    sa.UniqueConstraint('id', name=op.f('uq_Other_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('Role',
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Role')),
    sa.UniqueConstraint('id', name=op.f('uq_Role_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('Tourney',
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('curGameNodeId', sa.Integer(), nullable=False),
    sa.Column('showGame', sa.Boolean(), nullable=False),
    sa.Column('ended', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Tourney')),
    sa.UniqueConstraint('id', name=op.f('uq_Tourney_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('User',
    sa.Column('lastName', sa.String(length=128), nullable=True),
    sa.Column('imageUrl', sa.String(length=256), nullable=True),
    sa.Column('ticketType', sa.String(length=128), nullable=True),
    sa.Column('ticketTId', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Integer(), server_default='0', nullable=False),
    sa.Column('group', sa.Integer(), server_default='0', nullable=False),
    sa.Column('gameOpened', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('login', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_big', sa.String(length=8), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_User')),
    sa.UniqueConstraint('id', name=op.f('uq_User_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_User_id_big'), ['id_big'], unique=True)
        batch_op.create_index(batch_op.f('ix_User_login'), ['login'], unique=True)

    op.create_table('UserGameLog',
    sa.Column('gameId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('team', sa.Integer(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('lastClick', sa.DateTime(), nullable=True),
    sa.Column('hackAlert', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_UserGameLog')),
    sa.UniqueConstraint('id', name=op.f('uq_UserGameLog_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('db_state',
    sa.Column('initialized', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_db_state')),
    sa.UniqueConstraint('id', name=op.f('uq_db_state_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('Image',
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('creationDate', sa.DateTime(), nullable=False),
    sa.Column('deletionDate', sa.DateTime(), nullable=True),
    sa.Column('createdById', sa.Integer(), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['createdById'], ['User.id'], name=op.f('fk_Image_createdById_User')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Image')),
    sa.UniqueConstraint('id', name=op.f('uq_Image_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('Permission',
    sa.Column('roleId', sa.Integer(), nullable=False),
    sa.Column('operationId', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['operationId'], ['Operation.id'], name=op.f('fk_Permission_operationId_Operation')),
    sa.ForeignKeyConstraint(['roleId'], ['Role.id'], name=op.f('fk_Permission_roleId_Role')),
    sa.PrimaryKeyConstraint('roleId', 'operationId', name=op.f('pk_Permission')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('Quest',
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=False),
    sa.Column('reward', sa.Integer(), nullable=False),
    sa.Column('hidden', sa.Boolean(), nullable=False),
    sa.Column('dialog1Id', sa.Integer(), nullable=True),
    sa.Column('dialog2Id', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_big', sa.String(length=8), nullable=False),
    sa.ForeignKeyConstraint(['dialog1Id'], ['Dialog.id'], name=op.f('fk_Quest_dialog1Id_Dialog')),
    sa.ForeignKeyConstraint(['dialog2Id'], ['Dialog.id'], name=op.f('fk_Quest_dialog2Id_Dialog')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Quest')),
    sa.UniqueConstraint('id', name=op.f('uq_Quest_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    with op.batch_alter_table('Quest', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_Quest_id_big'), ['id_big'], unique=True)

    op.create_table('Send',
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('creatorId', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('positive', sa.Boolean(), nullable=False),
    sa.Column('reusable', sa.Boolean(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_big', sa.String(length=8), nullable=False),
    sa.ForeignKeyConstraint(['creatorId'], ['User.id'], name=op.f('fk_Send_creatorId_User')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Send')),
    sa.UniqueConstraint('id', name=op.f('uq_Send_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    with op.batch_alter_table('Send', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_Send_id_big'), ['id_big'], unique=True)

    op.create_table('Transaction',
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('fromId', sa.Integer(), nullable=False),
    sa.Column('toId', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=16), nullable=False),
    sa.Column('itemId', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['fromId'], ['User.id'], name=op.f('fk_Transaction_fromId_User')),
    sa.ForeignKeyConstraint(['toId'], ['User.id'], name=op.f('fk_Transaction_toId_User')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Transaction')),
    sa.UniqueConstraint('id', name=op.f('uq_Transaction_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('UserGame',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('team', sa.Integer(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('lastClick', sa.DateTime(), nullable=True),
    sa.Column('hackAlert', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name=op.f('fk_UserGame_userId_User')),
    sa.PrimaryKeyConstraint('userId', name=op.f('pk_UserGame')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('UserRole',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('roleId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['roleId'], ['Role.id'], name=op.f('fk_UserRole_roleId_Role')),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name=op.f('fk_UserRole_userId_User')),
    sa.PrimaryKeyConstraint('userId', 'roleId', name=op.f('pk_UserRole')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('DialogCharacter',
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('imgId', sa.Integer(), nullable=True),
    sa.Column('orien', sa.Integer(), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['imgId'], ['Image.id'], name=op.f('fk_DialogCharacter_imgId_Image')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_DialogCharacter')),
    sa.UniqueConstraint('id', name=op.f('uq_DialogCharacter_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('StoreItem',
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('imgId', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_big', sa.String(length=8), nullable=False),
    sa.ForeignKeyConstraint(['imgId'], ['Image.id'], name=op.f('fk_StoreItem_imgId_Image')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_StoreItem')),
    sa.UniqueConstraint('id', name=op.f('uq_StoreItem_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    with op.batch_alter_table('StoreItem', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_StoreItem_id_big'), ['id_big'], unique=True)

    op.create_table('TourneyCharacter',
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('color', sa.String(length=32), nullable=False),
    sa.Column('imgId', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['imgId'], ['Image.id'], name=op.f('fk_TourneyCharacter_imgId_Image')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_TourneyCharacter')),
    sa.UniqueConstraint('id', name=op.f('uq_TourneyCharacter_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('UserQuest',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('questId', sa.Integer(), nullable=False),
    sa.Column('openDate', sa.DateTime(), nullable=True),
    sa.Column('completeDate', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['questId'], ['Quest.id'], name=op.f('fk_UserQuest_questId_Quest')),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name=op.f('fk_UserQuest_userId_User')),
    sa.PrimaryKeyConstraint('userId', 'questId', name=op.f('pk_UserQuest')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('UserSend',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('sendId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sendId'], ['Send.id'], name=op.f('fk_UserSend_sendId_Send')),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name=op.f('fk_UserSend_userId_User')),
    sa.PrimaryKeyConstraint('userId', 'sendId', name=op.f('pk_UserSend')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    op.create_table('Game',
    sa.Column('startStr', sa.String(length=8), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('countdown', sa.Integer(), nullable=False),
    sa.Column('opponent1Id', sa.Integer(), nullable=True),
    sa.Column('opponent2Id', sa.Integer(), nullable=True),
    sa.Column('startTime', sa.DateTime(), nullable=True),
    sa.Column('clicks1', sa.Integer(), nullable=False),
    sa.Column('clicks2', sa.Integer(), nullable=False),
    sa.Column('winner', sa.Integer(), nullable=False),
    sa.Column('showGame', sa.Boolean(), nullable=False),
    sa.Column('tourneyEnded', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['opponent1Id'], ['TourneyCharacter.id'], name=op.f('fk_Game_opponent1Id_TourneyCharacter')),
    sa.ForeignKeyConstraint(['opponent2Id'], ['TourneyCharacter.id'], name=op.f('fk_Game_opponent2Id_TourneyCharacter')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Game')),
    sa.UniqueConstraint('id', name=op.f('uq_Game_id')),
    mysql_charset='utf8mb4',
    mysql_collate='utf8mb4_unicode_ci'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Game')
    op.drop_table('UserSend')
    op.drop_table('UserQuest')
    op.drop_table('TourneyCharacter')
    with op.batch_alter_table('StoreItem', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_StoreItem_id_big'))

    op.drop_table('StoreItem')
    op.drop_table('DialogCharacter')
    op.drop_table('UserRole')
    op.drop_table('UserGame')
    op.drop_table('Transaction')
    with op.batch_alter_table('Send', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_Send_id_big'))

    op.drop_table('Send')
    with op.batch_alter_table('Quest', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_Quest_id_big'))

    op.drop_table('Quest')
    op.drop_table('Permission')
    op.drop_table('Image')
    op.drop_table('db_state')
    op.drop_table('UserGameLog')
    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_User_login'))
        batch_op.drop_index(batch_op.f('ix_User_id_big'))

    op.drop_table('User')
    op.drop_table('Tourney')
    op.drop_table('Role')
    op.drop_table('Other')
    op.drop_table('Operation')
    op.drop_table('Log')
    op.drop_table('GameLog')
    op.drop_table('Dialog')
    # ### end Alembic commands ###
