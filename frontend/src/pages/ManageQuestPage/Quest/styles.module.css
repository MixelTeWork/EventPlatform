.root {
	position: relative;
	display: flex;
	align-items: center;
	justify-content: center;
	gap: 0.5rem;
	padding: 1rem 0.5rem;
	border: 2px solid aquamarine;
	border-radius: 0.5rem;
}

.error {
	position: absolute;
	inset: 0;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	gap: 0.5rem;
	border-radius: 0.5rem;
	background: rgba(0, 0, 0, 0.5);
	font-size: 1.2rem;
	color: aquamarine;
}
.error button {
	display: flex;
	justify-content: center;
	align-items: center;
	background: rgba(238, 130, 238, 0.2);
	border: 1px solid violet;
	color: aquamarine;
	border-radius: 0.25rem;
	font-size: 1rem;
	cursor: pointer;
}

.id {
	position: absolute;
	left: 0.25rem;
	top: 0.25rem;
	opacity: 0.5;
}

.img {
	display: flex;
	width: 5rem;
	aspect-ratio: 1;
	border-radius: 0.5rem;
	flex-shrink: 0;
	padding: 0;
	background:
		radial-gradient(circle at 50% 10%, purple, transparent 50%),
		radial-gradient(circle at 90% 90%, blue, transparent 50%),
		radial-gradient(circle at 30% 90%, azure, transparent 50%),
		radial-gradient(circle at 50% 50%, lightblue, violet);
	border: none;
	cursor: pointer;
}
.img img {
	width: 100%;
	height: 100%;
	object-fit: cover;
	border-radius: 0.5rem;
}

.inputs {
	display: grid;
	grid-template-columns: auto 8rem;
	gap: 0.25rem 0.5rem;
}
.inputs > :nth-child(2n - 1) {
	align-self: center;
}
.changedHighlight {
	color: aquamarine;
}

/* @media screen and (max-width: 790px) and (min-width: 620px) {
	.inputs {
		grid-template-columns: 8rem;
	}
} */

@media screen and (max-width: 300px) {
	.inputs {
		grid-template-columns: 8rem;
	}
}

.inputs input {
	background-color: transparent;
	color: white;
	border: 1px solid transparent;
	border-bottom: 1px solid aquamarine;
	border-radius: 0.2rem;
	outline: none;
}
.inputs input:focus-visible {
	background: rgba(238, 130, 238, 0.2);
}

.changed .inputs input {
	border: 1px solid aquamarine;
}

.buttons {
	display: flex;
	align-items: center;
	gap: 0.25rem;
	min-width: 4.25rem;
}

@media screen and (((max-width: 620px) and (min-width: 570px)) or (max-width: 340px)) {
	.root > .buttons {
		min-width: auto;
		flex-direction: column;
	}
}

.buttons button {
	display: flex;
	justify-content: center;
	align-items: center;
	background: rgba(238, 130, 238, 0.2);
	border: 1px solid violet;
	color: aquamarine;
	border-radius: 0.25rem;
	padding: 0;
	width: 2rem;
	height: 2rem;
	font-size: 1rem;
	cursor: pointer;
}

.btnMinus {
	font-family: Arial, Helvetica, sans-serif;
}

.checkbox {
	align-self: center;
	justify-self: center;

	position: relative;
	width: 2.3rem;
	height: 1.2rem;
	border: 1px solid aquamarine;
	border-radius: 1rem;
	cursor: pointer;
}
.checkbox:has(input:focus-visible) {
	background: rgba(238, 130, 238, 0.2);
}
.checkbox input {
	pointer-events: none;
	opacity: 0;
}
.checkbox span {
	position: absolute;
	display: block;
	width: 0.9rem;
	height: 0.9rem;
	top: 0.1rem;
	left: 0.1rem;
	border: 1px solid aquamarine;
	border-radius: 50%;
	background-color: rgba(255, 99, 71, 0.4);
	transition-property: left, background-color;
	transition-duration: 250ms;
}
.checkbox input:checked ~ span {
	background-color: rgba(0, 255, 0, 0.7);
	left: 1.2rem;
}

.description {
	background-color: transparent;
	color: white;
	border: none;
	padding: 0;
	border-radius: 0.2rem;
	text-wrap: nowrap;
	text-overflow: ellipsis;
	overflow: hidden;
	outline: none;
}
.description:focus-visible {
	background-color: rgba(238, 130, 238, 0.2);
}

.textarea {
	min-height: 5rem;
	min-width: 20rem;
	margin-block: 1rem;
	font-size: 1.1rem;
}

.description_count {
	display: flex;
	justify-content: flex-end;
}
.description_count_too_many {
	color: tomato;
}

.dialogBtns {
	min-width: auto;
}
.dialogBtns button {
	width: 1.5rem;
	height: 1.5rem;
}