"""v1

Revision ID: 0be7a34cc832
Revises: 
Create Date: 2024-01-28 12:42:40.873948

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0be7a34cc832'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Operation',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Operation')),
    sa.UniqueConstraint('id', name=op.f('uq_Operation_id'))
    )
    op.create_table('Quest',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('reward', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Quest')),
    sa.UniqueConstraint('id', name=op.f('uq_Quest_id'))
    )
    op.create_table('Role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Role')),
    sa.UniqueConstraint('id', name=op.f('uq_Role_id'))
    )
    op.create_table('StoreItem',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_StoreItem')),
    sa.UniqueConstraint('id', name=op.f('uq_StoreItem_id'))
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_vk', sa.Integer(), nullable=True),
    sa.Column('id_big', sa.String(length=8), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('login', sa.String(length=128), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('lastName', sa.String(length=128), nullable=True),
    sa.Column('imageUrl', sa.String(length=256), nullable=True),
    sa.Column('balance', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_User')),
    sa.UniqueConstraint('id', name=op.f('uq_User_id')),
    sa.UniqueConstraint('id_big', name=op.f('uq_User_id_big')),
    sa.UniqueConstraint('id_vk', name=op.f('uq_User_id_vk'))
    )
    op.create_index(op.f('ix_User_login'), 'User', ['login'], unique=True)
    op.create_table('Log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('actionCode', sa.String(length=16), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('userName', sa.String(length=64), nullable=False),
    sa.Column('tableName', sa.String(length=16), nullable=False),
    sa.Column('recordId', sa.Integer(), nullable=False),
    sa.Column('changes', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name=op.f('fk_Log_userId_User')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Log')),
    sa.UniqueConstraint('id', name=op.f('uq_Log_id'))
    )
    op.create_table('Permission',
    sa.Column('roleId', sa.Integer(), nullable=False),
    sa.Column('operationId', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['operationId'], ['Operation.id'], name=op.f('fk_Permission_operationId_Operation')),
    sa.ForeignKeyConstraint(['roleId'], ['Role.id'], name=op.f('fk_Permission_roleId_Role')),
    sa.PrimaryKeyConstraint('roleId', 'operationId', name=op.f('pk_Permission'))
    )
    op.create_table('Transaction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('fromId', sa.Integer(), nullable=False),
    sa.Column('toId', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=16), nullable=False),
    sa.Column('itemId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['fromId'], ['User.id'], name=op.f('fk_Transaction_fromId_User')),
    sa.ForeignKeyConstraint(['toId'], ['User.id'], name=op.f('fk_Transaction_toId_User')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Transaction')),
    sa.UniqueConstraint('id', name=op.f('uq_Transaction_id'))
    )
    op.create_table('UserQuest',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('questId', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['questId'], ['Quest.id'], name=op.f('fk_UserQuest_questId_Quest')),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name=op.f('fk_UserQuest_userId_User')),
    sa.PrimaryKeyConstraint('userId', 'questId', name=op.f('pk_UserQuest'))
    )
    op.create_table('UserRole',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('roleId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['roleId'], ['Role.id'], name=op.f('fk_UserRole_roleId_Role')),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name=op.f('fk_UserRole_userId_User')),
    sa.PrimaryKeyConstraint('userId', 'roleId', name=op.f('pk_UserRole'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('UserRole')
    op.drop_table('UserQuest')
    op.drop_table('Transaction')
    op.drop_table('Permission')
    op.drop_table('Log')
    op.drop_index(op.f('ix_User_login'), table_name='User')
    op.drop_table('User')
    op.drop_table('StoreItem')
    op.drop_table('Role')
    op.drop_table('Quest')
    op.drop_table('Operation')
    # ### end Alembic commands ###
